//This node is used to display a description window describing the new resource being tracked. It's only shown once per game.
SNACKS_RESOURCE_INTRO
{
	name = Stress
}
@SNACKS_RESOURCE_INTRO[Stress]:FOR[SnacksStress]
{
	title = Stress!
	description = This addon introduces roster resources in the form of Stress. Unlike resources tied to a vessel, roster resources are characteristics of the kerbals. The SnacksConverter can convert roster resources- the Entertainment Center can reduce Stress, for instance, and SNACKS_RESOURCE_PROCESSOR config can work with roster resources as well. <br>The addon also introduces the Snacks event system. Events let you apply different outcomes based on one or more preconditions. They let you spice up your game and give it more personality.<br>As for Stress, kerbals don't like being confined to tiny capsules for long journeys, and they accumulate Stress daily. Additional events, like getting Sick, running out of Snacks, and gasping for Fresh Air cause additional Stress. <br>The vessel's crew capacity and a kerbal's experience level affect how much Stress they can take. Once they hit their max, they are Stressed Out and will no longer work. They are <b><i>NOT</i></b> Tourists! Engineers, Pilots, Scientists, and the like simply lose their skills. They can recover in the various stock crew cabins with a working Entertainment Center, but while recovering they don't use their skills either. Once a kerbal's Stress is below their max and you either turn off the Entertainment Center or they leave the cabin, they'll return to work.
}

//This resource is added to a kerbal’s crew roster entry. These aren’t resources in the traditional sense; they are characteristics of the kerbal itself.
SNACKS_ROSTER_RESOURCE
{
	resourceName = Stress

	displayName = Stress

	//Flag to indicate whether or not to show the resource in the snapshot window. Default: true
	showInSnapshot = true

	//A customized format for the status. The following parameters are all optional:
	//<<percent>>: amount divided by maxAmount.
	//<<amount>>: Current amount of roster resource.
	//<<maxAmount>>: Max amount of roster resource.
	statusFormat = <<percent>> (<<amount>>/<<maxAmount>> days)

	//Amount to add
	amount = 0

	//Max amount possible. Note that for Stress, the maxAmount will actually depend upon the vessel's crew capacity.
	maxAmount = 100

	//Amount to add when the kerbal levels up
	experienceBonusAmount = 0

	//Max amount to add when the kerbal levels up
	experienceBonusMaxAmount = 10
}

//The OnStrikePenalty removes skill effects from kerbals that experience the penalty, but because more than one event and part and such can also remove crew skills,
//they all need to be coordinated via conditions. The SKILL_LOSS_CONDITION node defines the conditions that remove a kerbal's skill effects. If a kerbal has at least
//one condition that's on this list, then skill effects will be removed. If the kerbals have none of the conditions on the list then they regain use of their skills.
SKILL_LOSS_CONDITION
{
	name = Stressed Out
}

SKILL_LOSS_CONDITION
{
	name = Relaxing
}

SKILL_LOSS_CONDITION
{
	name = Stargazing
}

//A lack of air will definitely cause stress...
@SNACKS_RESOURCE_PROCESSOR[Air]:FOR[SnacksFreshAir]
{
	OUTCOME
	{
		name = ResourceProduced
		resourceNameProduced = Stress
		amount = 1
	}
}

//These parts help kerbals de-stress
@PART[crewCabin,mk2CrewCabin]
{
	MODULE
	{
		name = SnacksConverter
		ConverterName = Entertainment Center
		StartActionName = Start Entertainment
		StopActionName = Stop Entertainment
		AutoShutdown = false
		GeneratesHeat = false
		UseSpecialistBonus = false
		
		//At least one crew needs to be in the part to run the converter.
		minimumCrew = 1

		//Connection back home required to receive entertainment.
		requiresHomeConnection = true

		//This condition is set whenever the kerbal enters the part and the converter is active, and
		//when the converter is started. Since it's registered as a SKILL_LOSS_CONDITION, the kerbals will lose their
		//skills while the converter is running.
		conditionSummary = Relaxing

		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 0.4
			FlowMode = ALL_VESSEL
		}

		//Works like an INPUT_RESOURCE except:
		// It applies to individual kerbals.
		// You can specify an AmountPerDay or AmountPerSecond.
		ROSTER_INPUT_RESOURCE
		{
			ResourceName = Stress

			//AmountPerDay will be translated into: AmountPerDay / seconds per homeworld day
			//This will override AmountPerSecond if it is defined in the node.
			AmountPerDay = 2
		}
	}
}

@PART[MK1CrewCabin]
{
	MODULE
	{
		name = SnacksConverter
		ConverterName = Entertainment Center
		StartActionName = Start Entertainment
		StopActionName = Stop Entertainment
		AutoShutdown = false
		GeneratesHeat = false
		UseSpecialistBonus = false
		
		//At least one crew needs to be in the part to run the converter.
		minimumCrew = 1

		//Connection back home required to receive entertainment.
		requiresHomeConnection = true

		//This condition is set whenever the kerbal enters the part and the converter is active, and
		//when the converter is started. Since it's registered as a SKILL_LOSS_CONDITION, the kerbals will lose their
		//skills while the converter is running.
		conditionSummary = Relaxing

		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 0.2
			FlowMode = ALL_VESSEL
		}

		//Works like an INPUT_RESOURCE except:
		// It applies to individual kerbals.
		// You can specify an AmountPerDay or AmountPerSecond.
		ROSTER_INPUT_RESOURCE
		{
			ResourceName = Stress

			//AmountPerDay will be translated into: AmountPerDay / seconds per homeworld day
			//This will override AmountPerSecond if it is defined in the node.
			AmountPerDay = 2
		}
	}
}

@PART[mk3CrewCabin]
{
	MODULE
	{
		name = SnacksConverter
		ConverterName = Entertainment Center
		StartActionName = Start Entertainment
		StopActionName = Stop Entertainment
		AutoShutdown = false
		GeneratesHeat = false
		UseSpecialistBonus = false
		
		//At least one crew needs to be in the part to run the converter.
		minimumCrew = 1

		//Connection back home required to receive entertainment.
		requiresHomeConnection = true

		//This condition is set whenever the kerbal enters the part and the converter is active, and
		//when the converter is started. Since it's registered as a SKILL_LOSS_CONDITION, the kerbals will lose their
		//skills while the converter is running.
		conditionSummary = Relaxing

		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 1.6
			FlowMode = ALL_VESSEL
		}

		//Works like an INPUT_RESOURCE except:
		// It applies to individual kerbals.
		// You can specify an AmountPerDay or AmountPerSecond.
		ROSTER_INPUT_RESOURCE
		{
			ResourceName = Stress

			//AmountPerDay will be translated into: AmountPerDay / seconds per homeworld day
			//This will override AmountPerSecond if it is defined in the node.
			AmountPerDay = 2
		}
	}
}

@PART[cupola]
{
	MODULE
	{
		name = SnacksConverter
		ConverterName = Stargazing
		StartActionName = Start Stargazing
		StopActionName = Stop Stargazing
		AutoShutdown = false
		GeneratesHeat = false
		UseSpecialistBonus = false
		
		//At least one crew needs to be in the part to run the converter.
		minimumCrew = 1

		//Connection back home required to receive entertainment.
		requiresHomeConnection = false

		//This condition is set whenever the kerbal enters the part and the converter is active, and
		//when the converter is started. Since it's registered as a SKILL_LOSS_CONDITION, the kerbals will lose their
		//skills while the converter is running.
		conditionSummary = Stargazing

		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 0.05
			FlowMode = ALL_VESSEL
		}

		//Works like an INPUT_RESOURCE except:
		// It applies to individual kerbals.
		// You can specify an AmountPerDay or AmountPerSecond.
		ROSTER_INPUT_RESOURCE
		{
			ResourceName = Stress

			//AmountPerDay will be translated into: AmountPerDay / seconds per homeworld day
			//This will override AmountPerSecond if it is defined in the node.
			AmountPerDay = 1.5
		}
	}
}